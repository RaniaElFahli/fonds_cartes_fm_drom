distances[["france_m"]][[1]]
-2245062 - -5389654
test_2
distances[["guadeloupe"]][[1]]
distances[["guadeloupe"]][[2]]
epci_fm_sc
fonds_separes_epci
calcul_distances <- function(x, adjust_value) {
dx <- bbox_fm_sc$xmin - x$xmax + adjust_value
dy <- bbox_fm_sc$ymin - x$ymax + adjust_value
return(list(dx, dy))
}
distances <- bbox_drom_fm |>
lapply(calcul_distances, adjust_value = 0)
distances[["guadeloupe"]][[1]][["xmin"]]
distances[["guadeloupe"]][[2]][["ymin"]]
test_martinique_wgs84 <- qgis_run_algorithm(
alg, INPUT = fonds_separes_epci[["guadeloupe"]], DELTA_Y = -145242.1 , DELTA_X =   6396153
)
test_2 = sf::st_as_sf(test_martinique_wgs84)
mapview::mapview(test_2)
distances <- bbox_drom_fm |>
lapply(calcul_distances, adjust_value = 20)
distances <- bbox_drom_fm |>
lapply(calcul_distances, adjust_value = 20000)
distances[["guadeloupe"]][[1]]
distances[["guadeloupe"]][[2]]
test_martinique_wgs84 <- qgis_run_algorithm(
alg, INPUT = fonds_separes_epci[["guadeloupe"]], DELTA_Y = -125242.1  , DELTA_X =   6416153
)
test_2 = sf::st_as_sf(test_martinique_wgs84)
mapview::mapview(test_2)
distances <- bbox_drom_fm |>
lapply(calcul_distances, adjust_value = 2000000)
distances[["guadeloupe"]][[1]]
distances[["guadeloupe"]][[2]]
test_martinique_wgs84 <- qgis_run_algorithm(
alg, INPUT = fonds_separes_epci[["guadeloupe"]], DELTA_Y = 1854758   , DELTA_X = 8396153
)
test_2 = sf::st_as_sf(test_martinique_wgs84)
mapview::mapview(test_2)
distances <- bbox_drom_fm |>
lapply(calcul_distances, adjust_value = 20000)
distances[["guadeloupe"]][[1]]
test_martinique_wgs84 <- qgis_run_algorithm(
alg, INPUT = fonds_separes_epci[["guadeloupe"]], DELTA_Y = distances[["guadeloupe"]][[2]]  , DELTA_X = distances[["guadeloupe"]][[1]]
)
test_2 = sf::st_as_sf(test_martinique_wgs84)
mapview::mapview(test_2)
test_martinique_wgs84 <- qgis_run_algorithm(
alg, INPUT = fonds_separes_epci[["guadeloupe"]], DELTA_Y = distances[["guadeloupe"]][[2]]  , DELTA_X = distances[["guadeloupe"]][[1]]
)
test_2 = sf::st_as_sf(test_martinique_wgs84)
mapview::mapview(test_2)
distances <- bbox_drom_fm |>
lapply(calcul_distances, adjust_value = 35000)
alg = "native:translategeometry"
union_arguments = qgis_get_argument_specs(alg)
union_arguments
library("qgisprocess")
test_martinique_wgs84 <- qgis_run_algorithm(
alg, INPUT = fonds_separes_epci[["guadeloupe"]], DELTA_Y = distances[["guadeloupe"]][[2]]  , DELTA_X = distances[["guadeloupe"]][[1]]
)
test_2 = sf::st_as_sf(test_martinique_wgs84)
mapview::mapview(test_2)
distances <- bbox_drom_fm |>
lapply(calcul_distances, adjust_value = 55000)
alg = "native:translategeometry"
union_arguments = qgis_get_argument_specs(alg)
union_arguments
library("qgisprocess")
test_martinique_wgs84 <- qgis_run_algorithm(
alg, INPUT = fonds_separes_epci[["guadeloupe"]], DELTA_Y = distances[["guadeloupe"]][[2]]  , DELTA_X = distances[["guadeloupe"]][[1]]
)
test_2 = sf::st_as_sf(test_martinique_wgs84)
mapview::mapview(test_2)
distances <- bbox_drom_fm |>
lapply(calcul_distances, adjust_value = 85000)
alg = "native:translategeometry"
union_arguments = qgis_get_argument_specs(alg)
union_arguments
test_martinique_wgs84 <- qgis_run_algorithm(
alg, INPUT = fonds_separes_epci[["guadeloupe"]], DELTA_Y = distances[["guadeloupe"]][[2]]  , DELTA_X = distances[["guadeloupe"]][[1]]
)
test_2 = sf::st_as_sf(test_martinique_wgs84)
mapview::mapview(test_2)
distances <- bbox_drom_fm |>
lapply(calcul_distances, adjust_value = 95000)
alg = "native:translategeometry"
union_arguments = qgis_get_argument_specs(alg)
union_arguments
test_martinique_wgs84 <- qgis_run_algorithm(
alg, INPUT = fonds_separes_epci[["guadeloupe"]], DELTA_Y = distances[["guadeloupe"]][[2]]  , DELTA_X = distances[["guadeloupe"]][[1]]
)
test_2 = sf::st_as_sf(test_martinique_wgs84)
mapview::mapview(test_2)
distances <- bbox_drom_fm |>
lapply(calcul_distances, adjust_value = 98000)
alg = "native:translategeometry"
union_arguments = qgis_get_argument_specs(alg)
union_arguments
test_martinique_wgs84 <- qgis_run_algorithm(
alg, INPUT = fonds_separes_epci[["guadeloupe"]], DELTA_Y = distances[["guadeloupe"]][[2]]  , DELTA_X = distances[["guadeloupe"]][[1]]
)
test_2 = sf::st_as_sf(test_martinique_wgs84)
mapview::mapview(test_2)
distances <- bbox_drom_fm |>
lapply(calcul_distances, adjust_value = 10000)
alg = "native:translategeometry"
union_arguments = qgis_get_argument_specs(alg)
union_arguments
test_martinique_wgs84 <- qgis_run_algorithm(
alg, INPUT = fonds_separes_epci[["guadeloupe"]], DELTA_Y = distances[["guadeloupe"]][[2]]  , DELTA_X = distances[["guadeloupe"]][[1]]
)
test_2 = sf::st_as_sf(test_martinique_wgs84)
mapview::mapview(test_2)
distances <- bbox_drom_fm |>
lapply(calcul_distances, adjust_value = 98000)
alg = "native:translategeometry"
union_arguments = qgis_get_argument_specs(alg)
union_arguments
test_martinique_wgs84 <- qgis_run_algorithm(
alg, INPUT = fonds_separes_epci[["guadeloupe"]], DELTA_Y = distances[["guadeloupe"]][[2]]  , DELTA_X = distances[["guadeloupe"]][[1]]
)
test_2 = sf::st_as_sf(test_martinique_wgs84)
mapview::mapview(test_2)
distances <- bbox_drom_fm |>
lapply(calcul_distances, adjust_value = 98900)
alg = "native:translategeometry"
union_arguments = qgis_get_argument_specs(alg)
union_arguments
test_martinique_wgs84 <- qgis_run_algorithm(
alg, INPUT = fonds_separes_epci[["guadeloupe"]], DELTA_Y = distances[["guadeloupe"]][[2]]  , DELTA_X = distances[["guadeloupe"]][[1]]
)
test_2 = sf::st_as_sf(test_martinique_wgs84)
mapview::mapview(test_2)
distances <- bbox_drom_fm |>
lapply(calcul_distances, adjust_value = 99900)
alg = "native:translategeometry"
union_arguments = qgis_get_argument_specs(alg)
union_arguments
test_martinique_wgs84 <- qgis_run_algorithm(
alg, INPUT = fonds_separes_epci[["guadeloupe"]], DELTA_Y = distances[["guadeloupe"]][[2]]  , DELTA_X = distances[["guadeloupe"]][[1]]
)
test_2 = sf::st_as_sf(test_martinique_wgs84)
mapview::mapview(test_2)
calcul_distances <- function(x, adjust_value) {
dx <- bbox_fm_sc$xmin - x$xmax + adjust_value
dy <- bbox_fm_sc$ymin - x$ymax + adjust_value_2
return(list(dx, dy))
}
distances <- bbox_drom_fm |>
lapply(calcul_distances, adjust_value = 99900, adjust_value_2 = 98000)
calcul_distances <- function(x, adjust_value) {
dx <- bbox_fm_sc$xmin - x$xmax + adjust_value
dy <- bbox_fm_sc$ymin - x$ymax + adjust_value_2
return(list(dx, dy))
}
library("qgisprocess")
distances <- bbox_drom_fm |>
lapply(calcul_distances, adjust_value = 99900, adjust_value_2 = 98000)
calcul_distances <- function(x, adjust_value, adjust_value_2) {
dx <- bbox_fm_sc$xmin - x$xmax + adjust_value
dy <- bbox_fm_sc$ymin - x$ymax + adjust_value_2
return(list(dx, dy))
}
library("qgisprocess")
distances <- bbox_drom_fm |>
lapply(calcul_distances, adjust_value = 99900, adjust_value_2 = 98000)
alg = "native:translategeometry"
union_arguments = qgis_get_argument_specs(alg)
union_arguments
test_martinique_wgs84 <- qgis_run_algorithm(
alg, INPUT = fonds_separes_epci[["guadeloupe"]], DELTA_Y = distances[["guadeloupe"]][[2]]  , DELTA_X = distances[["guadeloupe"]][[1]]
)
test_2 = sf::st_as_sf(test_martinique_wgs84)
mapview::mapview(test_2)
distances <- bbox_drom_fm |>
lapply(calcul_distances, adjust_value = 99900, adjust_value_2 = 50000)
alg = "native:translategeometry"
union_arguments = qgis_get_argument_specs(alg)
union_arguments
test_martinique_wgs84 <- qgis_run_algorithm(
alg, INPUT = fonds_separes_epci[["guadeloupe"]], DELTA_Y = distances[["guadeloupe"]][[2]]  , DELTA_X = distances[["guadeloupe"]][[1]]
)
test_2 = sf::st_as_sf(test_martinique_wgs84)
mapview::mapview(test_2)
distances <- bbox_drom_fm |>
lapply(calcul_distances, adjust_value = 99900, adjust_value_2 = 90000)
alg = "native:translategeometry"
union_arguments = qgis_get_argument_specs(alg)
union_arguments
test_martinique_wgs84 <- qgis_run_algorithm(
alg, INPUT = fonds_separes_epci[["guadeloupe"]], DELTA_Y = distances[["guadeloupe"]][[2]]  , DELTA_X = distances[["guadeloupe"]][[1]]
)
test_2 = sf::st_as_sf(test_martinique_wgs84)
mapview::mapview(test_2)
distances <- bbox_drom_fm |>
lapply(calcul_distances, adjust_value = 99900, adjust_value_2 = 11000)
alg = "native:translategeometry"
union_arguments = qgis_get_argument_specs(alg)
union_arguments
test_martinique_wgs84 <- qgis_run_algorithm(
alg, INPUT = fonds_separes_epci[["guadeloupe"]], DELTA_Y = distances[["guadeloupe"]][[2]]  , DELTA_X = distances[["guadeloupe"]][[1]]
)
test_2 = sf::st_as_sf(test_martinique_wgs84)
mapview::mapview(test_2)
distances <- bbox_drom_fm |>
lapply(calcul_distances, adjust_value = 99900, adjust_value_2 = 33000)
alg = "native:translategeometry"
union_arguments = qgis_get_argument_specs(alg)
union_arguments
test_martinique_wgs84 <- qgis_run_algorithm(
alg, INPUT = fonds_separes_epci[["guadeloupe"]], DELTA_Y = distances[["guadeloupe"]][[2]]  , DELTA_X = distances[["guadeloupe"]][[1]]
)
test_2 = sf::st_as_sf(test_martinique_wgs84)
mapview::mapview(test_2)
distances <- bbox_drom_fm |>
lapply(calcul_distances, adjust_value = 99900, adjust_value_2 = 99900)
alg = "native:translategeometry"
union_arguments = qgis_get_argument_specs(alg)
union_arguments
test_martinique_wgs84 <- qgis_run_algorithm(
alg, INPUT = fonds_separes_epci[["guadeloupe"]], DELTA_Y = distances[["guadeloupe"]][[2]]  , DELTA_X = distances[["guadeloupe"]][[1]]
)
test_2 = sf::st_as_sf(test_martinique_wgs84)
mapview::mapview(test_2)
99900+1000
distances <- bbox_drom_fm |>
lapply(calcul_distances, adjust_value = 100900, adjust_value_2 = 99900)
alg = "native:translategeometry"
union_arguments = qgis_get_argument_specs(alg)
union_arguments
test_martinique_wgs84 <- qgis_run_algorithm(
alg, INPUT = fonds_separes_epci[["guadeloupe"]], DELTA_Y = distances[["guadeloupe"]][[2]]  , DELTA_X = distances[["guadeloupe"]][[1]]
)
test_2 = sf::st_as_sf(test_martinique_wgs84)
mapview::mapview(test_2)
distances <- bbox_drom_fm |>
lapply(calcul_distances, adjust_value = 100900, adjust_value_2 = 100900)
alg = "native:translategeometry"
union_arguments = qgis_get_argument_specs(alg)
union_arguments
test_martinique_wgs84 <- qgis_run_algorithm(
alg, INPUT = fonds_separes_epci[["guadeloupe"]], DELTA_Y = distances[["guadeloupe"]][[2]]  , DELTA_X = distances[["guadeloupe"]][[1]]
)
test_2 = sf::st_as_sf(test_martinique_wgs84)
mapview::mapview(test_2)
distances <- bbox_drom_fm |>
lapply(calcul_distances, adjust_value = 180900, adjust_value_2 = 180900)
alg = "native:translategeometry"
union_arguments = qgis_get_argument_specs(alg)
union_arguments
test_martinique_wgs84 <- qgis_run_algorithm(
alg, INPUT = fonds_separes_epci[["guadeloupe"]], DELTA_Y = distances[["guadeloupe"]][[2]]  , DELTA_X = distances[["guadeloupe"]][[1]]
)
test_2 = sf::st_as_sf(test_martinique_wgs84)
mapview::mapview(test_2)
distances <- bbox_drom_fm |>
lapply(calcul_distances, adjust_value = 190900, adjust_value_2 = 190900)
alg = "native:translategeometry"
union_arguments = qgis_get_argument_specs(alg)
union_arguments
test_martinique_wgs84 <- qgis_run_algorithm(
alg, INPUT = fonds_separes_epci[["guadeloupe"]], DELTA_Y = distances[["guadeloupe"]][[2]]  , DELTA_X = distances[["guadeloupe"]][[1]]
)
test_2 = sf::st_as_sf(test_martinique_wgs84)
mapview::mapview(test_2)
distances <- bbox_drom_fm |>
lapply(calcul_distances, adjust_value = 200900, adjust_value_2 = 200900)
alg = "native:translategeometry"
union_arguments = qgis_get_argument_specs(alg)
union_arguments
test_martinique_wgs84 <- qgis_run_algorithm(
alg, INPUT = fonds_separes_epci[["guadeloupe"]], DELTA_Y = distances[["guadeloupe"]][[2]]  , DELTA_X = distances[["guadeloupe"]][[1]]
)
test_2 = sf::st_as_sf(test_martinique_wgs84)
mapview::mapview(test_2)
distances <- bbox_drom_fm |>
lapply(calcul_distances, adjust_value = 230900, adjust_value_2 = 230900)
alg = "native:translategeometry"
union_arguments = qgis_get_argument_specs(alg)
union_arguments
test_martinique_wgs84 <- qgis_run_algorithm(
alg, INPUT = fonds_separes_epci[["guadeloupe"]], DELTA_Y = distances[["guadeloupe"]][[2]]  , DELTA_X = distances[["guadeloupe"]][[1]]
)
test_2 = sf::st_as_sf(test_martinique_wgs84)
mapview::mapview(test_2)
distances <- bbox_drom_fm |>
lapply(calcul_distances, adjust_value = 210900, adjust_value_2 = 230900)
alg = "native:translategeometry"
union_arguments = qgis_get_argument_specs(alg)
union_arguments
test_martinique_wgs84 <- qgis_run_algorithm(
alg, INPUT = fonds_separes_epci[["guadeloupe"]], DELTA_Y = distances[["guadeloupe"]][[2]]  , DELTA_X = distances[["guadeloupe"]][[1]]
)
test_2 = sf::st_as_sf(test_martinique_wgs84)
mapview::mapview(test_2)
distances <- bbox_drom_fm |>
lapply(calcul_distances, adjust_value = 190900, adjust_value_2 = 240900)
alg = "native:translategeometry"
union_arguments = qgis_get_argument_specs(alg)
union_arguments
test_martinique_wgs84 <- qgis_run_algorithm(
alg, INPUT = fonds_separes_epci[["guadeloupe"]], DELTA_Y = distances[["guadeloupe"]][[2]]  , DELTA_X = distances[["guadeloupe"]][[1]]
)
test_2 = sf::st_as_sf(test_martinique_wgs84)
mapview::mapview(test_2)
distances <- bbox_drom_fm |>
lapply(calcul_distances, adjust_value = 190900, adjust_value_2 = 250900)
alg = "native:translategeometry"
union_arguments = qgis_get_argument_specs(alg)
union_arguments
test_martinique_wgs84 <- qgis_run_algorithm(
alg, INPUT = fonds_separes_epci[["guadeloupe"]], DELTA_Y = distances[["guadeloupe"]][[2]]  , DELTA_X = distances[["guadeloupe"]][[1]]
)
test_2 = sf::st_as_sf(test_martinique_wgs84)
mapview::mapview(test_2)
test_2 = epci_fm_sc + test_2
test_2 = c(epci_fm_sc, test_2)
mapview::mapview(test_2)
View(test_2)
test_2 = sf::st_as_sf(test_martinique_wgs84)
test_2 = rbind(epci_fm_sc, test_2)
View(epci_fm_sc)
test_2 = sf::st_as_sf(test_martinique_wgs84)
View(test_2)
test_2 <- test_2 |>
dplyr::rename("geometry" = geom)
test_2 = rbind(epci_fm_sc, test_2)
mapview::mapview(test_2)
distances <- bbox_drom_fm |>
lapply(calcul_distances, adjust_value = 90900, adjust_value_2 = 450900)
alg = "native:translategeometry"
union_arguments = qgis_get_argument_specs(alg)
union_arguments
test_martinique_wgs84 <- qgis_run_algorithm(
alg, INPUT = fonds_separes_epci[["guadeloupe"]], DELTA_Y = distances[["guadeloupe"]][[2]]  , DELTA_X = distances[["guadeloupe"]][[1]]
)
test_2 = sf::st_as_sf(test_martinique_wgs84)
test_2 <- test_2 |>
dplyr::rename("geometry" = geom)
test_2 = rbind(epci_fm_sc, test_2)
mapview::mapview(test_2)
distances <- bbox_drom_fm |>
lapply(calcul_distances, adjust_value = 90900, adjust_value_2 = 480900)
alg = "native:translategeometry"
union_arguments = qgis_get_argument_specs(alg)
union_arguments
test_martinique_wgs84 <- qgis_run_algorithm(
alg, INPUT = fonds_separes_epci[["guadeloupe"]], DELTA_Y = distances[["guadeloupe"]][[2]]  , DELTA_X = distances[["guadeloupe"]][[1]]
)
test_2 = sf::st_as_sf(test_martinique_wgs84)
test_2 <- test_2 |>
dplyr::rename("geometry" = geom)
# test_2 = rbind(epci_fm_sc, test_2)
mapview::mapview(test_2)
test_2 = rbind(epci_fm_sc, test_2)
test_martinique_wgs84 <- qgis_run_algorithm(
alg, INPUT = fonds_separes_epci[["martinique"]], DELTA_Y = distances[["martinique"]][[2]]  , DELTA_X = distances[["guadeloupe"]][[1]]
)
test_martinique = sf::st_as_sf(test_martinique_wgs84)
test_martinique <- test_2 |>
dplyr::rename("geometry" = geom)
test_martinique_wgs84 <- qgis_run_algorithm(
alg, INPUT = fonds_separes_epci[["martinique"]], DELTA_Y = distances[["martinique"]][[2]]  , DELTA_X = distances[["martinique"]][[1]]
)
test_martinique = sf::st_as_sf(test_martinique_wgs84)
test_martinique <- test_2 |>
dplyr::rename("geometry" = geom)
View(test_martinique)
test_martinique <- test_martinique |>
dplyr::rename("geometry" = geom)
mapview::mapview(test_martinique)
View(fonds_separes_epci)
# séparer les fonds de cartes
fonds_separes <- function(table_sf, code_geo, code_filtre) {
france_m <- table_sf %>%
dplyr::filter(!{{code_geo}} %in% get(paste0(code_filtre, "_dom")))|>
mutate(drom_fm = "france_m")
print(paste("Exclure:", paste0(code_filtre, "_dom")))
print(head(france_m))
guadeloupe <- table_sf %>%
dplyr::filter({{code_geo}} %in% get(paste0(code_filtre, "_guad"))) |>
mutate(drom_fm = "guadeloupe")
print(paste("Inclure Guadeloupe:", paste0(code_filtre, "_guad")))
print(head(guadeloupe))
reunion <- table_sf %>%
dplyr::filter({{code_geo}} %in% get(paste0(code_filtre, "_reun"))) |>
mutate(drom_fm = "reunion")
print(paste("Inclure Reunion:", paste0(code_filtre, "_reun")))
print(head(reunion))
martinique <- table_sf %>%
dplyr::filter({{code_geo}} %in% get(paste0(code_filtre, "_mart"))) |>
mutate(drom_fm = "martinique")
print(paste("Inclure Martinique:", paste0(code_filtre, "_mart")))
print(head(martinique))
guyane <- table_sf %>%
dplyr::filter({{code_geo}} %in% get(paste0(code_filtre, "_guy"))) |>
mutate(drom_fm = "guyane")
print(paste("Inclure Guyane:", paste0(code_filtre, "_guy")))
print(head(guyane))
return(list(france_m = france_m, guadeloupe = guadeloupe, reunion = reunion, martinique = martinique, guyane = guyane))
}
View(fonds_separes_epci)
fonds_separes_epci <- fonds_separes(
table_sf = epci_fonds,
code_geo = CODE_SIREN,
code_filtre = "epci"
)
View(fonds_separes_epci)
fonds_separes_epci[["martinique"]]
View(fonds_separes_epci[["martinique"]])
View(bbox_drom_fm)
bbox_drom_fm[["france_m"]]
union_arguments
test_martinique_wgs84 <- qgis_run_algorithm(
alg, INPUT = fonds_separes_epci[["martinique"]], DELTA_Y = distances[["martinique"]][[2]] + 90900 , DELTA_X = distances[["martinique"]][[1]] + 580900
)
test_martinique = sf::st_as_sf(test_martinique_wgs84)
test_martinique <- test_martinique |>
dplyr::rename("geometry" = geom)
mapview::mapview(test_martinique)
calcul_distances <- function(x) {
dx <- bbox_fm_sc$xmin - x$xmax
dy <- bbox_fm_sc$ymin - x$ymax
return(list(dx, dy))
}
distances <- bbox_drom_fm |>
lapply(calcul_distances)
test_guadeloupe_wgs84 <- qgis_run_algorithm(
alg, INPUT = fonds_separes_epci[["guadeloupe"]], DELTA_Y = distances[["guadeloupe"]][[2]] + 480900 , DELTA_X = distances[["guadeloupe"]][[1]] +90900
)
test_2 = sf::st_as_sf(test_martinique_wgs84)
test_2 <- test_2 |>
dplyr::rename("geometry" = geom)
# test_2 = rbind(epci_fm_sc, test_2)
mapview::mapview(test_2)
test_2 = sf::st_as_sf(test_guadeloupe_wgs84)
test_2 <- test_2 |>
dplyr::rename("geometry" = geom)
# test_2 = rbind(epci_fm_sc, test_2)
mapview::mapview(test_2)
test_2 = rbind(epci_fm_sc, test_2)
test_martinique_wgs84 <- qgis_run_algorithm(
alg, INPUT = fonds_separes_epci[["martinique"]], DELTA_Y = distances[["martinique"]][[2]] + 580900, DELTA_X = distances[["martinique"]][[1]] +  90900
)
test_martinique = sf::st_as_sf(test_martinique_wgs84)
test_martinique <- test_martinique |>
dplyr::rename("geometry" = geom)
mapview::mapview(test_martinique)
total_1 = rbind(epci_fm_sc, test_2, test_martinique)
View(test_martinique)
View(test_2)
View(test_martinique_wgs84)
View(test_martinique)
epci_fm_sc <- fonds_separes_epci[["france_m"]] |>
dplyr::filter(!CODE_SIREN %in% epci_corse)
total_1 = rbind(epci_fm_sc, test_2, test_martinique)
mapview::mapview(total_1)
test_martinique_wgs84 <- qgis_run_algorithm(
alg, INPUT = fonds_separes_epci[["martinique"]], DELTA_Y = distances[["martinique"]][[2]] + 580900, DELTA_X = distances[["martinique"]][[1]] +  90800
)
test_martinique = sf::st_as_sf(test_martinique_wgs84)
test_martinique <- test_martinique |>
dplyr::rename("geometry" = geom)
mapview::mapview(test_martinique)
total_1 = rbind(epci_fm_sc, test_2, test_martinique)
mapview::mapview(total_1)
test_reunion_wgs84 <- qgis_run_algorithm(
alg, INPUT = fonds_separes_epci[["reunion"]], DELTA_Y = distances[["reunion"]][[2]] + 380900, DELTA_X = distances[["reunion"]][[1]] +  90800
)
test_reunion = sf::st_as_sf(test_reunion_wgs84)
test_reunion <- test_reunion |>
dplyr::rename("geometry" = geom)
mapview::mapview(test_reunion)
union_arguments
distances[["martinique"]][[2]] + 580900
distances[["martinique"]][[1]] +  90800
test_reunion_wgs84 <- qgis_run_algorithm(
alg, INPUT = fonds_separes_epci[["reunion"]], DELTA_Y = distances[["reunion"]][[2]] + 380900, DELTA_X = distances[["reunion"]][[1]] +  90800, DELTA_Z = 0.5, DELTA_M = 0.5
)
test_reunion = sf::st_as_sf(test_reunion_wgs84)
test_reunion <- test_reunion |>
dplyr::rename("geometry" = geom)
mapview::mapview(test_reunion)
qgis_search_algorithms("transform")
alg = "native:affinetransform"
union_arguments = qgis_get_argument_specs(alg)
union_arguments
test_guadeloupe_wgs84 <- qgis_run_algorithm(
alg, INPUT = fonds_separes_epci[["guadeloupe"]], DELTA_Y = distances[["guadeloupe"]][[2]] + 480900 , DELTA_X = distances[["guadeloupe"]][[1]] +90900
)
test_2 = sf::st_as_sf(test_guadeloupe_wgs84)
test_2 <- test_2 |>
dplyr::rename("geometry" = geom)
# test_2 = rbind(epci_fm_sc, test_2)
mapview::mapview(test_2)
test_reunion_wgs84 <- qgis_run_algorithm(
alg, INPUT = fonds_separes_epci[["reunion"]], DELTA_Y = distances[["reunion"]][[2]] + 380900, DELTA_X = distances[["reunion"]][[1]] +  90800, SCALE_X = 0.5,SCALE_Y = 0.5
)
test_reunion = sf::st_as_sf(test_reunion_wgs84)
test_reunion <- test_reunion |>
dplyr::rename("geometry" = geom)
mapview::mapview(test_reunion)
test_reunion_wgs84 <- qgis_run_algorithm(
alg, INPUT = fonds_separes_epci[["reunion"]], DELTA_Y = distances[["reunion"]][[2]] + 380900, DELTA_X = distances[["reunion"]][[1]] +  90800
)
test_reunion = sf::st_as_sf(test_reunion_wgs84)
test_reunion <- test_reunion |>
dplyr::rename("geometry" = geom)
mapview::mapview(test_reunion)
